---
name: Updater

"on":
  # Allow manual trigger
  workflow_dispatch:
  schedule:
    # Run every day at 00:00, see https://crontab.guru/#0_0_*_*_*
    - cron: "0 0 * * *"

jobs:
  update_flake:
    name: Update Nix dependencies
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            auto-optimise-store = true
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes

      - name: Use Cachix for cache
        uses: cachix/cachix-action@v15
        with:
          name: space
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          extraPullNames: nix-community

      - name: Check flake
        uses: DeterminateSystems/flake-checker-action@main

      # Update flake.lock (for nix config)
      - name: Update flake.lock
        uses: DeterminateSystems/update-flake-lock@main
        with:
          # Title of PR to be created and commit title
          pr-title: "feat: update flake.lock"

          # Labels to be set on the PR
          pr-labels: |
            dependencies
            automated

  # update_nvim:
  #   name: Update Neovim dependencies
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Setup neovim
  #       uses: MunifTanjim/setup-neovim-action@v1
  #       with:
  #         tag: stable
  #
  #     # Update lazy-lock.json (for LazyVim, NeoVim)
  #     - name: Update lazy-lock.json
  #       run: |
  #         nvim --headless -c \"Lazy! sync\" +qa
